import Event from "../db/models/event.js";
import { repeatRassilka } from "../utils/rassilka.js";

export const sendRepeatRassilkaHandler = async (ctx) => {
  const responseMatch = ctx.callbackQuery.data.match(
    /^sendrassilka:([a-f0-9]{24})$/
  ); // –ì—Ä—É–ø–ø–∞ –∑–∞—Ö–≤–∞—Ç–∞ (–≤ –∫—Ä—É–≥–ª—ã—Ö —Å–∫–æ–±–∫–∞—Ö)

  if (!responseMatch) {
    console.error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç callback_data:", ctx.callbackQuery.data);
    return ctx.answerCallbackQuery(
      "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç callback_data."
    );
  }

  const eventId = responseMatch[1]; // –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∏–∑ –≥—Ä—É–ø–ø—ã –∑–∞—Ö–≤–∞—Ç–∞

  console.log("–ü–æ–ª—É—á–µ–Ω eventId –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:", eventId);

  try {
    const event = await Event.findById(eventId);
    if (!event) {
      console.error("–ò–≤–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è ID:", eventId);
      return ctx.answerCallbackQuery("–ò–≤–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.");
    }

    console.log("–ù–∞–π–¥–µ–Ω–Ω—ã–π –∏–≤–µ–Ω—Ç:", event);

    const message = `${
      event.invitation_message
    }\n\nüßò‚Äç‚ôÄÔ∏è–ü—Ä–∏–≥–ª–∞—à–∞—é –≤—Å–µ—Ö –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –Ω–∞ "<b>${
      event.title
    }</b>"üßò‚Äç‚ôÄÔ∏è\n\n<i>–ö–æ–≥–¥–∞?</i> <b>${new Date(event.event_time).toLocaleString(
      "ru-RU",
      {
        day: "numeric",
        month: "numeric",
        weekday: "long",
        hour: "numeric",
        minute: "numeric",
      }
    )}</b>\n\n<i>–ì–¥–µ?</i> <b>${
      event.address
    }</b>\n\n<i>–ß—Ç–æ –±–µ—Ä–µ–º —Å —Å–æ–±–æ–π?</i> <b>–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, —É–¥–æ–±–Ω—É—é –æ–¥–µ–∂–¥—É, –≤–æ–¥–∏—á–∫—É)</b>\n\n<i>–ß—Ç–æ –Ω–∞—Å –∂–¥–µ—Ç?</i> <b>${
      event.description || "–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —É—Ç–æ—á–Ω—è—é—Ç—Å—è."
    }</b>\n\n–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è <b>@vslomalinafik</b> üíå`;

    console.log("–ì–æ—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:", message);

    await repeatRassilka(message, event.image, ctx, eventId);
    await ctx.answerCallbackQuery(
      "–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª–∏."
    );
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–∞—Å—Å—ã–ª–∫–∏:", error);
    await ctx.answerCallbackQuery("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–∞—Å—Å—ã–ª–∫–∏.");
  }
};
