import { InlineKeyboard } from "grammy";
import { getAllEvent } from "../services/api.js";

export const changeEventHandler = async (ctx) => {
  const newIndex = parseInt(ctx.match[1], 10);
  const { allEvents } = await getAllEvent(ctx.bot);
  if (newIndex < 0 || newIndex >= allEvents.length) {
    return ctx.answerCallbackQuery("–ù–µ—Ç –±–æ–ª—å—à–µ –∏–≤–µ–Ω—Ç–æ–≤.");
  }
  const event = allEvents[newIndex];
  const keyboard = new InlineKeyboard()
    .text(newIndex > 0 ? "üëà –ü—Ä–µ–¥—ã–¥—É—â–∏–π" : " ", `change_event:${newIndex - 1}`)
    .text("–ü–æ–≤—Ç–æ—Ä–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞", `sendrassilka:${event.id}`)
    .text(
      newIndex < allEvents.length - 1 ? "–°–ª–µ–¥—É—é—â–∏–π üëâ" : " ",
      `change_event:${newIndex + 1}`
    );
  try {
    const message = `
      –í—Å–µ–º –¥–æ–±—Ä—ã–π –≤–µ—á–µ—ÄüåÜüôè\n\nüßò‚Äç‚ôÄÔ∏è–ü—Ä–∏–≥–ª–∞—à–∞—é –≤—Å–µ—Ö –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –Ω–∞ "<b>${
        event.title
      }</b>"üßò‚Äç‚ôÄÔ∏è\n\n<i>–ö–æ–≥–¥–∞?</i> <b>${new Date(event.event_time).toLocaleString(
      "ru-RU",
      {
        day: "numeric",
        month: "numeric",
        weekday: "long",
        hour: "numeric",
        minute: "numeric",
      }
    )}</b>\n\n<i>–ì–¥–µ?</i> <b>${
      event.address
    }</b>\n\n<i>–ß—Ç–æ –±–µ—Ä–µ–º —Å —Å–æ–±–æ–π?</i> <b>–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, —É–¥–æ–±–Ω—É—é –æ–¥–µ–∂–¥—É, –≤–æ–¥–∏—á–∫—É)</b>\n\n<i>–ß—Ç–æ –Ω–∞—Å –∂–¥–µ—Ç?</i><b>${
      event.description || "–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —É—Ç–æ—á–Ω—è—é—Ç—Å—è."
    }</b>\n\n–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è <b>@vslomalinafik</b> üíå
    `;
    await ctx.editMessageMedia(
      {
        type: "photo",
        media: event.image,
        caption: message,
        parse_mode: "HTML",
      },
      {
        reply_markup: keyboard,
      }
    );
    await ctx.answerCallbackQuery();
  } catch (error) {
    console.error(error);
    await ctx.answerCallbackQuery("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∏–≤–µ–Ω—Ç.");
  }
};
